{
	"name": "df_cricket_flatten_info_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_p8_source_json_files_cricket_data",
						"type": "DatasetReference"
					},
					"name": "StageFileData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_p8_target_flatten_cricket_files",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "FlattenInfo"
				},
				{
					"name": "DelistArrayColumns"
				},
				{
					"name": "SelectAndRenameColumns"
				},
				{
					"name": "InfoSummaryPK"
				}
			],
			"scriptLines": [
				"source(output(",
				"          meta as (data_version as string, created as string, revision as integer),",
				"          info as (balls_per_over as integer, city as string, dates as string[], event as (name as string, match_number as integer), gender as string, match_type as string, match_type_number as integer, officials as (match_referees as string[], reserve_umpires as string[], tv_umpires as string[], umpires as string[]), outcome as (winner as string, by as (runs as integer)), overs as integer, player_of_match as string[], players as ({South Africa} as string[], Australia as string[]), registry as (people as ({A Zampa} as string, {AK Markram} as string, {CM Brown} as string, {DA Miller} as string, {DA Warner} as string, {GJ Maxwell} as string, {H Klaasen} as string, {HE van der Dussen} as string, {J Srinath} as string, {JP Inglis} as string, {JR Hazlewood} as string, {JS Wilson} as string, {K Rabada} as string, {KA Maharaj} as string, {L Ngidi} as string, {M Jansen} as string, {M Labuschagne} as string, {MA Starc} as string, {MP Stoinis} as string, {MR Marsh} as string, {PJ Cummins} as string, {Q de Kock} as string, {RA Kettleborough} as string, {RK Illingworth} as string, {SA Abbott} as string, {SPD Smith} as string, {T Bavuma} as string, {T Shamsi} as string)), season as string, team_type as string, teams as string[], toss as (decision as string, winner as string), venue as string),",
				"          innings as (team as string, overs as (over as integer, deliveries as (batter as string, bowler as string, non_striker as string, runs as (batter as integer, extras as integer, total as integer))[])[], powerplays as (from as double, to as double, type as string)[])[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'singleDocument') ~> StageFileData",
				"StageFileData foldDown(unroll(info.dates),",
				"     mapColumn(",
				"          data_version = meta.data_version,",
				"          created = meta.created,",
				"          revision = meta.revision,",
				"          balls_per_over = info.balls_per_over,",
				"          city = info.city,",
				"          dates = info.dates,",
				"          event = info.event.name,",
				"          match_number = info.event.match_number,",
				"          gender = info.gender,",
				"          match_type = info.match_type,",
				"          match_type_number = info.match_type_number,",
				"          outcome = info.outcome.winner,",
				"          by = info.outcome.by,",
				"          overs = info.overs,",
				"          season = info.season,",
				"          team_type = info.team_type,",
				"          toss = info.toss.winner,",
				"          decision = info.toss.decision,",
				"          venue = info.venue,",
				"          teams = info.teams,",
				"          player_of_match = info.player_of_match",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlattenInfo",
				"FlattenInfo derive(teams1 = teams[1],",
				"          teams2 = teams[2],",
				"          player_of_match1 = player_of_match[1],",
				"          player_of_match2 = player_of_match[2],",
				"          win_by = replace(replace(split(toString(by),':')[1],'\"',''),'{',''),",
				"          win_by_wickets_or_runs = replace(replace(split(toString(by),':')[2],'\"',''),'}','')) ~> DelistArrayColumns",
				"InfoSummaryPK select(mapColumn(",
				"          data_version,",
				"          created,",
				"          revision,",
				"          balls_per_over,",
				"          city,",
				"          dates,",
				"          event,",
				"          match_number,",
				"          gender,",
				"          match_type,",
				"          match_type_number,",
				"          outcome,",
				"          overs,",
				"          season,",
				"          team_type,",
				"          toss,",
				"          decision,",
				"          venue,",
				"          teams1,",
				"          teams2,",
				"          player_of_match1,",
				"          player_of_match2,",
				"          win_by,",
				"          win_by_wickets_or_runs",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectAndRenameColumns",
				"DelistArrayColumns keyGenerate(output(info_summary_pk as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> InfoSummaryPK",
				"SelectAndRenameColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['info.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}